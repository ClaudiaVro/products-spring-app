server.port=9090
name.product.url=http://localhost:8080
name.authorization.url=http://localhost:9000
name.registry.url=http://localhost:9100
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
feign.oauth2.enabled=true
spring.jackson.deserialization.USE_BIG_DECIMAL_FOR_FLOATS=true

#spring.security.oauth2.client.registration.product-client-oidc.provider=spring
#spring.security.oauth2.client.registration.product-client-oidc.client-id=product-client
#spring.security.oauth2.client.registration.product-client-oidc.client-secret="secret"
#spring.security.oauth2.client.registration.product-client-oidc.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.product-client-oidc.redirect-uri=http://127.0.0.1:9090/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.product-client-oidc.scope=openid
#spring.security.oauth2.client.registration.product-client-oidc.client-name=product-client-oidc
#spring.security.oauth2.client.registration.product-client-authorization-code.provider=spring
#spring.security.oauth2.client.registration.product-client-authorization-code.client-id=product-client
#spring.security.oauth2.client.registration.product-client-authorization-code.client-secret=secret
#spring.security.oauth2.client.registration.product-client-authorization-code.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.product-client-authorization-code.redirect-uri=http://127.0.0.1:9090/authorized
#spring.security.oauth2.client.registration.product-client-authorization-code.scope=history.read
#spring.security.oauth2.client.registration.product-client-authorization-code.client-name=product-client-authorization-code
#spring.security.oauth2.client.registration.product-client-client-credentials.provider=spring
#spring.security.oauth2.client.registration.product-client-client-credentials.client-id=product-client
#spring.security.oauth2.client.registration.product-client-client-credentials.client-secret=secret
#spring.security.oauth2.client.registration.product-client-client-credentials.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.product-client-client-credentials.scope=history.read
#spring.security.oauth2.client.registration.product-client-client-credentials.client-name=product-client-client-credentials

spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:9000

spring.security.oauth2.client.registration.reg-client.provider=spring
spring.security.oauth2.client.registration.reg-client.client-id=demo
spring.security.oauth2.client.registration.reg-client.client-secret="secret"
spring.security.oauth2.client.registration.reg-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.reg-client.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.reg-client.redirect-uri="{baseUrl}/login/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.reg-client.scope= user.read,openid


spring.output.ansi.enabled=ALWAYS